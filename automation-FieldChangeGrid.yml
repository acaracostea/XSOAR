comment: 'This sorts the training grid field by date/time as entries are added. '
commonfields:
  id: FieldChangeGrid
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.8.0
    itemVersion: 1.0.0
    packID: XSOAR_Engineer_Training
    packName: XSOAR Engineer Training
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.10.48392
enabled: true
engineinfo: {}
mainengineinfo: {}
name: FieldChangeGrid
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('FieldChangeGrid', 'start', __line__())


  import time
  from datetime import datetime

  milli_sec = int(round(time.time() * 1000))
  new = json.loads(demisto.args().get('new', []))

  for i in new:
      if not i.get('datetime', ''):
          i['datetime'] = timestamp_to_datestring(milli_sec)

  new.sort(key=lambda x: x['datetime'])

  count = 1
  for i in new:
      i['item'] = count
      count += 1

  val = json.dumps({'traininggridfieldsort': new})

  demisto.results(demisto.executeCommand("setIncident", {'customFields': val}))

  register_module_line('FieldChangeGrid', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- training
- field-change-triggered
type: python
