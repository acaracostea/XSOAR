args:
- name: alertid
commonfields:
  id: 222c60d7-c30c-4818-8d1c-a1101a9d24cf
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.13.72123
enabled: true
engineinfo: {}
mainengineinfo: {}
name: faz-alert-get-events
pswd: ""
runas: DBotWeakRole
runonce: false
script: |+
  import json
  from typing import Dict, Any
  import traceback


  ''' STANDALONE FUNCTION '''

  def get_events(alertid: str) -> list:
      events = []
      result=demisto.executeCommand('fortianalyzer-firewall-alert-logs-list', {'alert_id':alertid,'using':'FortiAnalyzer_instance_1'})

      if result:
          for res in result:
              events.append(res['Contents'])

      return events


  ''' MAIN FUNCTION '''


  def main():
      try:
          # TODO: replace the invoked command function with yours
          demisto.setContext('events',get_events(demisto.args().get('alertid')))
      except Exception as ex:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute BaseScript. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

scripttarget: 0
subtype: python3
tags:
- incident-action-button
type: python
