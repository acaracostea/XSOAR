args:
- description: The old value of the changed field
  name: old
- description: The new value of the changed field
  name: new
comment: Example Field Change trigger script.
commonfields:
  id: FieldChangeTeams
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.8.0
    itemVersion: 1.0.0
    packID: XSOAR_Engineer_Training
    packName: XSOAR Engineer Training
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.10.48392
enabled: true
engineinfo: {}
mainengineinfo: {}
name: FieldChangeTeams
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('FieldChangeTeams', 'start', __line__())


  # Field Change trigger script can take an "old" and "new" and then act accordingly.
  # Can be used on fields like severity, or owner to do different actions such as escalation or notification.

  old = demisto.args().get("old")
  new = demisto.args().get("new")

  if not old:
      old = "unassigned"

  if not new:
      new = "unassigned"

  demisto.results(f"Team was changed from {old} to {new}")

  register_module_line('FieldChangeTeams', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- field-change-triggered
- training
type: python
