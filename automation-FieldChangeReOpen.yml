args:
- description: The old value of the changed field
  name: old
- description: The new value of the changed field
  name: new
comment: Example Field Change trigger script which can be added to the DBot Status
  field, and will trigger if an Incident is reopened.
commonfields:
  id: FieldChangeReOpen
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.8.0
    itemVersion: 1.0.0
    packID: XSOAR_Engineer_Training
    packName: XSOAR Engineer Training
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.10.48392
enabled: true
engineinfo: {}
mainengineinfo: {}
name: FieldChangeReOpen
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('FieldChangeReOpen', 'start', __line__())


  # Field Change trigger script can take an "old" and "new" and then act accordingly.
  # Can be used on fields like severity, or owner to do different actions such as escalation or notification.

  # get the old and new values of the field
  old = demisto.args().get("old").lower()
  new = demisto.args().get("new").lower()

  # get the incident ID, need to use investigationId in field change scripts
  incident = demisto.incident().get('investigationId')

  if old == "closed" and new != "closed":
      demisto.results(f"Incident {incident} status was changed from {old} to {new}")
      # could do something else like send a slack:
      # demisto.executeCommand("send-notification", {"message":"Incident {incident} reopened", "channel":"xsoar"})

  register_module_line('FieldChangeReOpen', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- field-change-triggered
- training
type: python
