comment: Creates the Private IP and CXHost custom indicators via the REST API
commonfields:
  id: TrainingCreateCustomIndicatorTypesButton
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.8.0
    itemVersion: 1.0.0
    packID: XSOAR_Engineer_Training
    packName: XSOAR Engineer Training
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dependson:
  must:
  - '|||demisto-api-post'
  - '|||demisto-api-get'
dockerimage: demisto/python3:3.10.10.48392
enabled: true
engineinfo: {}
mainengineinfo: {}
name: TrainingCreateCustomIndicatorTypesButton
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('TrainingCreateCustomIndicatorTypesButton', 'start', __line__())


  import json

  # check to see if they already exist, so you can't run it more than once
  results = demisto.executeCommand("demisto-api-get", {"uri": "/reputation"})[0]["Contents"]["response"]
  current_indicators = [x["details"] for x in results]

  if "Private IP" not in current_indicators:
      private_ip_indicator = {
          "regex": "(10((?:\[\.\]|\.)(25[0-5]|2[0-4][0-9]|1[0-9]{1,2}|[0-9]{1,2})){3}|((172(?:\[\.\]|\.)(1[6-9]|2[0-9]|3[01]))|192(?:\[\.\]|\.)168)((?:\[\.\]|\.)(25[0-5]|2[0-4][0-9]|1[0-9]{1,2}|[0-9]{1,2})){2})",
          "details": "Private IP",
          "reputationScriptName": None,
          "enhancementScriptNames": [],
          "layout": "ipRep",
          "excludedBrands": [],
          "disabled": False,
          "updateAfter": None,
          "reputationCommand": "private-ip",
          "formatScript": None,
          "contextPath": None,
          "contextValue": None,
          "shouldPublish": True,
          "shouldCommit": True,
          "commitMessage": "Indicator type edited",
          "manualMapping": {},
          "expiration": 0,
          "shouldShareComments": False,
          "propagationLabels": ["all"]
      }

      demisto.executeCommand("demisto-api-post", {"uri": "/reputation", "body": json.dumps(private_ip_indicator)})
      demisto.results("Created Private IP custom Indicator type")
  else:
      demisto.results("Private IP indicator already exists, doing nothing....")

  if "CXHost" not in current_indicators:
      cxhost_indicator = {
          "regex": "(crossiscoming\d{3,5})",
          "details": "CXHost",
          "reputationScriptName": None,
          "enhancementScriptNames": [],
          "layout": "hostRep",
          "excludedBrands": [],
          "disabled": False,
          "updateAfter": None,
          "reputationCommand": "cxhost",
          "formatScript": None,
          "contextPath": None,
          "contextValue": None,
          "shouldPublish": True,
          "shouldCommit": True,
          "commitMessage": "Indicator type edited",
          "manualMapping": {},
          "expiration": 0,
          "shouldShareComments": False,
          "propagationLabels": ["all"]
      }

      demisto.executeCommand("demisto-api-post", {"uri": "/reputation", "body": json.dumps(cxhost_indicator)})
      demisto.results("Created CXHost custom Indicator type")
  else:
      demisto.results("CXHost indicator already exists, doing nothing....")

  register_module_line('TrainingCreateCustomIndicatorTypesButton', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- incident-action-button
- xet
type: python
