commonfields:
  id: ff8d422d-aa64-4b68-8555-81c0ff81f475
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
enabled: true
engineinfo: {}
mainengineinfo: {}
name: ObjectTypeOnFieldChange
pswd: ""
runas: DBotWeakRole
runonce: false
script: |+
  demisto.executeCommand('setIncident', {'actionstatus':''})
  demisto.executeCommand('setIncident', {'message':''})
  incident = demisto.incident()['CustomFields']
  object_type = incident['objecttype'] if 'objecttype' in incident.keys() else []

  if object_type and len(object_type) == 2 :
      if 'Source Address' in object_type and 'Source Group' in object_type:
          demisto.executeCommand('setIncident', {'objecttype':[]})
          demisto.executeCommand('setIncident', {'actionstatus':'<p style="color:red">Error</p>'})
          demisto.executeCommand('setIncident', {'message':'<p style="color:red">Object type field must have only one source type</p>'})
      elif 'Destination Address' in object_type and 'Destination Group' in object_type:
          demisto.executeCommand('setIncident', {'objecttype':[]})
          demisto.executeCommand('setIncident', {'actionstatus':'<p style="color:red">Error</p>'})
          demisto.executeCommand('setIncident', {'message':'<p style="color:red">Object type field must have only one destination type</p>'})
  else:
      demisto.executeCommand('setIncident', {'objecttype':[]})
      demisto.executeCommand('setIncident', {'actionstatus':'<p style="color:red">Error</p>'})
      demisto.executeCommand('setIncident', {'message':'<p style="color:red">Object type field must have 2 values</p>'})

scripttarget: 0
subtype: python3
tags:
- Firewall Changes
- AC
- field-change-triggered
type: python
